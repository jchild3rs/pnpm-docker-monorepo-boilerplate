name: CI

on:
  push:
    branches:
      - main
  pull_request:

env:
  PNPM_VERSION: 7.1.6
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: jchilders
  GPR_USER_PAT: ${{ secrets.GITHUB_TOKEN }}

jobs:
  Test-Build-Deploy:
    runs-on: ubuntu-latest
    env:
      TURBO_CACHE_KEY: ${{ matrix.os }}-${{ matrix.node-version }}
    steps:
      - uses: actions/checkout@v2
      - uses: pnpm/action-setup@v2.2.2
        with:
          version: ${{ env.PNPM_VERSION }}
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          cache: pnpm
          registry-url: https://npm.pkg.github.com
          scope: "@rentpath"
          token: ${{ secrets.GPR_TOKEN }}
      - name: set vars
        id: vars
        run: |
          SHORT_SHA=$( git rev-parse --short HEAD )
          echo "::set-output name=short_sha::${SHORT_SHA}"

          BRANCH_NAME=$( echo ${{ github.event.inputs.branch || github.head_ref || github.ref }} | sed -E -e 's/refs\/heads\/(.*)/\1/g' )
          echo "::set-output name=branch_name::${BRANCH_NAME}"
          
          BRANCH_TAG=$(
            echo "${BRANCH_NAME}" \
            | sed -e 's/[^a-zA-Z0-9]/-/g' \
            | tr '[:upper:]' '[:lower:]' \
            | cut -c 1-32 \
            | sed -e 's/[^a-z0-9]*$//'
          )
          echo "::set-output name=branch_tag::${BRANCH_TAG}"

          VERSION=$( date -u '+%Y%m%d' )-${{ github.run_number || 0 }}-${SHORT_SHA}
          echo "::set-output name=version::${VERSION}"
      - run: pnpm install --frozen-lockfile --prefer-offline
      - run: pnpm turbo run check lint test build --output-logs=new-only
      - uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: pnpm turbo run docker:build --output-logs=new-only
        env:
          BRANCH_TAG:  ${{ steps.vars.outputs.branch_tag }}
          VERSION: ${{ steps.vars.outputs.version }}
      - run: pnpm turbo run docker:push --output-logs=new-only
        env:
          BRANCH_TAG:  ${{ steps.vars.outputs.branch_tag }}
          VERSION: ${{ steps.vars.outputs.version }}
