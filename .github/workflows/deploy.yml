name: Deploy

on:
  push:
    branches:
      - main
  pull_request:

env:
  TURBO_CACHE_KEY: ubuntu-latest-16 # reuse cache key from ci workflow
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: jchilders

jobs:
  tag-and-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          cache: pnpm
          registry-url: https://npm.pkg.github.com
          scope: '@rentpath'
          token: ${{ secrets.GPR_TOKEN }}
      - run: pnpm install --frozen-lockfile --prefer-offline
      - run: pnpm turbo run build --output-logs=new-only
      - uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: set variables
        id: vars
        run: |
          OWNER=$( echo ${{ github.repository }} | sed -E -e 's/\/.+$//' )
          echo "OWNER=${OWNER}" >> $GITHUB_ENV
          echo "::set-output name=owner::${OWNER}"
          REPO=$( echo ${{ github.repository }} | sed -E -e 's/^[^\/]+\///')
          echo "REPO=${REPO}" >> $GITHUB_ENV
          echo "::set-output name=repo::${REPO}"
          BRANCH_NAME=$( echo ${{ github.event.inputs.branch || github.head_ref || github.ref }} | sed -E -e 's/refs\/heads\/(.*)/\1/g' )
          echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV
          echo "::set-output name=branch_name::${BRANCH_NAME}"
          BRANCH_TAG=$(
            echo "${BRANCH_NAME}" \
            | sed -e 's/[^a-zA-Z0-9]/-/g' \
            | tr '[:upper:]' '[:lower:]' \
            | cut -c 1-32 \
            | sed -e 's/[^a-z0-9]*$//'
          )
          
          if [[ ${{ contains(github.ref, 'main') }} = true ]]; then
            BRANCH_TAG=latest
          fi
          echo "BRANCH_TAG=${BRANCH_TAG}" >> $GITHUB_ENV
          echo "::set-output name=branch_tag::${BRANCH_TAG}"
          CONTEXT="${{ github.event.inputs.context || 'ci' }}"
          echo "CONTEXT=${CONTEXT}" >> $GITHUB_ENV
          echo "::set-output name=context::${CONTEXT}"
          REF="${{ github.event.inputs.branch || github.head_ref || github.ref }}"
          echo "REF=${REF}" >> $GITHUB_ENV
          echo "::set-output name=ref::${REF}"
          SHA=$( git rev-parse HEAD )
          echo "SHA=${SHA}" >> $GITHUB_ENV
          echo "::set-output name=sha::${SHA}"
          SHORT_SHA=$( git rev-parse --short HEAD )
          echo "SHORT_SHA=${SHORT_SHA}" >> $GITHUB_ENV
          echo "::set-output name=short_sha::${SHORT_SHA}"
          VERSION=$( date -u '+%Y%m%d' )-${{ github.run_number || 0 }}-${SHORT_SHA}
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "::set-output name=version::${VERSION}"
      - name: log variables
        run: |
          ./scripts/log.sh \
            "owner:             ${{ steps.vars.outputs.owner }}" \
            "repo:              ${{ steps.vars.outputs.repo }}" \
            "branch_name:       ${{ steps.vars.outputs.branch_name }}" \
            "branch_tag:        ${{ steps.vars.outputs.branch_tag }}" \
            "context:           ${{ steps.vars.outputs.context }}" \
            "cache_from:        ${{ steps.vars.outputs.cache_from }}" \
            "ref:               ${{ steps.vars.outputs.ref }}" \
            "sha:               ${{ steps.vars.outputs.sha }}" \
            "short_sha:         ${{ steps.vars.outputs.short_sha }}" \
            "version:           ${{ steps.vars.outputs.version }}" \
      - name: Tag and Push to Docker Registry
        run: pnpm turbo run release
        env:
          VERSION: ${{ steps.vars.outputs.version }}
          BRANCH_TAG: ${{ steps.vars.outputs.branch_tag }}
          TAG_PREFIX: ghcr:io/jchild3rs
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
